{"version":3,"sources":["components/PlayMenu.js","components/CustomAppBar.js","components/Timer.js","components/ScoreTracker.js","components/QuestionBoard.js","components/LifeLines.js","components/ScoreBoard.js","components/AudiencePoll.js","components/PhoneAFriend.js","components/LifeLineModal.js","components/WinModal.js","App.js","serviceWorker.js","index.js","assets/images/logo.png"],"names":["PlayMenu","letsPlay","this","props","Paper","className","alt","src","logo","Button","variant","onClick","Component","CustomAppBar","title","handleDrawerToggle","AppBar","position","id","Toolbar","IconButton","color","aria-label","edge","Timer","reset","setState","hasHandledTimerExpire","timerValue","progressValue","pause","playPause","state","onRef","setInterval","handleTimerExpire","CircularProgress","value","ScoreTracker","currentScore","nextScore","Grid","container","spacing","item","xs","style","float","QuestionBoard","setSelectedBtnIndex","index","allowSelecting","selectedBtnIndex","handleButtonSelect","firstOptionClass","secondOptionClass","thirdOptionClass","fourthOptionClass","handleCorrectSelectedOptionStyle","correctAnswerIndex","resetButtonStyles","resetTimer","timer","playPauseTimer","question","onOptionSelect","shuffledOptions","twoWrongIndices","ref","margin","decodeURIComponent","display","LifeLines","enableLifeLines","hasAudiencePoll","audiencePollHandler","hasPhoneAFriend","phoneAFriendHandler","hasFiftyFifty","fiftyFiftyHandler","disabled","ScoreBoard","mobileOpen","curScoreIndex","scoreAmounts","handleAudiencePoll","handlePhoneAFriend","handleFiftyFifty","Hidden","mdUp","implementation","Drawer","anchor","open","onClose","ModalProps","keepMounted","Divider","List","map","scoreAmount","questionNumber","length","ListItem","key","smDown","AudiencePoll","getRandomInt","min","max","Math","ceil","floor","random","valueOfA","valueOfB","valueOfC","valueOfD","correctAnswerValue","wrongOptionOneValue","wrongOptiontwoValue","wrongOptionThreeValue","height","background","getAnswerText","letter","answer","options","String","fromCharCode","LifeLineModal","getContent","PhoneAFriend","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","WinModal","backToMenu","resetGame","score","correctAnswer","role","theme","createMuiTheme","palette","type","reversedScoreAmounts","reverse","formatter","Intl","NumberFormat","currency","minimumFractionDigits","formattedScoreAmounts","format","shuffle","a","i","j","delay","ms","Promise","res","setTimeout","App","setupGame","promises","axios","get","all","then","allResponses","questionsData","forEach","concat","data","results","curQuestion","correct_answer","incorrect_answers","findIndex","option","curQuestionIndex","hasGameEnded","modalTitle","hasSelectedLifeLine","selectedLifeLine","catch","e","console","log","showMenu","getCurrentQuestion","verifyAnswer","questionBoard","newCurQuestion","newCurQuestionIndex","onLifeLineModalClose","removeTwoIncorrectOptions","wrongAnsIndexOne","wrongAnsIndexTwo","MuiThemeProvider","CssBaseline","setCurrentScore","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5987b627.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport logo from \"../assets/images/logo.png\";\r\n\r\nimport \"./PlayMenu.scss\";\r\n\r\nclass PlayMenu extends Component {\r\n  render() {\r\n    const { letsPlay } = this.props;\r\n    return (\r\n      <Paper className=\"play-menu\">\r\n        <img alt=\"Who Wants to Be a Millionaire\" src={logo} className=\"logo\" />\r\n        <h1 className=\"game-title\">Who Wants to Be a Millionaire</h1>\r\n        <h2 className=\"game-subtitle\">Video Game Edition</h2>\r\n        <Button \r\n          variant=\"contained\"\r\n          onClick={letsPlay}\r\n        >\r\n          Let's Play!\r\n        </Button>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayMenu;\r\n","import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport \"./CustomAppBar.scss\";\r\n\r\nclass CustomAppBar extends Component {\r\n  render() {\r\n    const { title, handleDrawerToggle } = this.props;\r\n    return (\r\n      <AppBar position=\"fixed\" id=\"appBar\">\r\n        <Toolbar>\r\n          <h3 className=\"title\">{title}</h3>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={() => handleDrawerToggle()}\r\n            id=\"menuButton\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomAppBar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport \"./Timer.scss\";\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasHandledTimerExpire: false,\r\n      timerValue: 60,\r\n      progressValue: 100,\r\n      pause: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n\r\n    setInterval(() => {\r\n      const { timerValue, progressValue, pause } = this.state;\r\n      if (!pause) {\r\n        if (timerValue > 0) {\r\n          this.setState({\r\n            timerValue: timerValue - 1,\r\n            progressValue: progressValue - 1.67\r\n          });\r\n        } else {\r\n          const { hasHandledTimerExpire } = this.state;\r\n          const { handleTimerExpire } = this.props;\r\n          if (!hasHandledTimerExpire) {\r\n            handleTimerExpire();\r\n            this.setState({hasHandledTimerExpire: true})\r\n          }\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      hasHandledTimerExpire: false,\r\n      timerValue: 60,\r\n      progressValue: 100,\r\n      pause: false\r\n    });\r\n  };\r\n\r\n  playPause = () => {\r\n    const { pause } = this.state;\r\n    this.setState({ pause: !pause });\r\n  }\r\n\r\n  render() {\r\n    const { timerValue, progressValue } = this.state;\r\n    return (\r\n      <div className=\"timer-container\">\r\n        <Paper id=\"timer\">\r\n          <CircularProgress\r\n            className=\"circularProgress\"\r\n            variant=\"static\"\r\n            value={progressValue}\r\n          />\r\n          <h2 id=\"timer-value\">{timerValue}</h2>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./ScoreTracker.scss\";\r\n\r\nclass ScoreTracker extends Component {\r\n  render() {\r\n    const { currentScore, nextScore } = this.props;\r\n    return (\r\n      <Grid container spacing={10}>\r\n        <Grid item xs={6}>\r\n          <span className=\"score-title\">Current score:</span>\r\n          <Paper className=\"score-badge\">{currentScore}</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <span className=\"score-title\" style={{ float: \"right\" }}>\r\n            Playing for:\r\n          </span>\r\n          <br />\r\n          <Paper className=\"score-badge\" style={{ float: \"right\" }}>\r\n            {nextScore}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScoreTracker;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport Timer from \"./Timer\";\r\nimport ScoreTracker from \"./ScoreTracker\";\r\n\r\nimport \"./QuestionBoard.scss\";\r\n\r\nclass QuestionBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allowSelecting: true,\r\n      selectedBtnIndex: null,\r\n      firstOptionClass: '',\r\n      secondOptionClass: '',\r\n      thirdOptionClass: '',\r\n      fourthOptionClass: ''\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  setSelectedBtnIndex = (index) => {\r\n    this.setState({\r\n      allowSelecting: false,\r\n      selectedBtnIndex: index\r\n    });\r\n  }\r\n\r\n  handleButtonSelect = () => {\r\n    const { selectedBtnIndex } = this.state;\r\n    switch (selectedBtnIndex) {\r\n      case 0:\r\n        this.setState({\r\n          firstOptionClass: \"selected-option\"\r\n        });\r\n        return;\r\n      case 1:\r\n        this.setState({\r\n          secondOptionClass: \"selected-option\"\r\n        });\r\n        return;\r\n      case 2:\r\n        this.setState({\r\n          thirdOptionClass: \"selected-option\"\r\n        });\r\n        return;\r\n      case 3:\r\n        this.setState({\r\n          fourthOptionClass: \"selected-option\"\r\n        });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  handleCorrectSelectedOptionStyle = () => {\r\n    const { correctAnswerIndex } = this.props;\r\n\r\n    switch (correctAnswerIndex) {\r\n      case 0:\r\n        this.setState({\r\n          allowSelecting: false,\r\n          firstOptionClass: \"correct-answer\"\r\n        });\r\n        return;\r\n      case 1:\r\n        this.setState({\r\n          allowSelecting: false,\r\n          secondOptionClass: \"correct-answer\"\r\n        });\r\n        return;\r\n      case 2:\r\n        this.setState({\r\n          allowSelecting: false,\r\n          thirdOptionClass: \"correct-answer\"\r\n        });\r\n        return;\r\n      case 3:\r\n        this.setState({\r\n          allowSelecting: false,\r\n          fourthOptionClass: \"correct-answer\"\r\n        });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  resetButtonStyles = () => {\r\n    this.setState({\r\n      allowSelecting: true,\r\n      selectedBtnIndex: null,\r\n      firstOptionClass: '',\r\n      secondOptionClass: '',\r\n      thirdOptionClass: '',\r\n      fourthOptionClass: ''\r\n    })\r\n  }\r\n\r\n  resetTimer = () => {\r\n    this.timer.reset();\r\n  }\r\n\r\n  playPauseTimer = () => {\r\n    this.timer.playPause();\r\n  }\r\n\r\n  render() {\r\n    const { allowSelecting, firstOptionClass, secondOptionClass, thirdOptionClass, fourthOptionClass } = this.state;\r\n    const { question, onOptionSelect, currentScore, nextScore, handleTimerExpire, shuffledOptions, twoWrongIndices } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <ScoreTracker currentScore={currentScore} nextScore={nextScore} />\r\n        {question ? (\r\n          <div>\r\n            <Paper className=\"question-board\">\r\n              <Timer\r\n                onRef={ref => (this.timer = ref)}\r\n                handleTimerExpire={handleTimerExpire}\r\n              />\r\n              <h2 style={{ margin: \"15px 0 25px\" }}>\r\n                {decodeURIComponent(question.question)}\r\n              </h2>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={`question-option ${firstOptionClass}`}\r\n                    style={{display: twoWrongIndices[0] === 0 || twoWrongIndices[1] === 0 ? 'none' : 'block'}}\r\n                    onClick={() => {\r\n                      if (allowSelecting) {\r\n                        this.setSelectedBtnIndex(0);\r\n                        onOptionSelect(shuffledOptions[0]);\r\n                      }\r\n                    }}\r\n                  >\r\n                    {\"A: \" + decodeURIComponent(shuffledOptions[0])}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={`question-option ${secondOptionClass}`}\r\n                    style={{display: twoWrongIndices[0] === 1 || twoWrongIndices[1] === 1 ? 'none' : 'block'}}\r\n                    onClick={() => {\r\n                      if (allowSelecting) {\r\n                        this.setSelectedBtnIndex(1);\r\n                        onOptionSelect(shuffledOptions[1])\r\n                      }\r\n                    }}\r\n                  >\r\n                    {\"B: \" + decodeURIComponent(shuffledOptions[1])}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={`question-option ${thirdOptionClass}`}\r\n                    style={{display: twoWrongIndices[0] === 2 || twoWrongIndices[1] === 2 ? 'none' : 'block'}}\r\n                    onClick={() => {\r\n                      if (allowSelecting) {\r\n                        this.setSelectedBtnIndex(2);\r\n                        onOptionSelect(shuffledOptions[2])\r\n                      }\r\n                    }}\r\n                  >\r\n                    {\"C: \" + decodeURIComponent(shuffledOptions[2])}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={`question-option ${fourthOptionClass}`}\r\n                    style={{display: twoWrongIndices[0] === 3 || twoWrongIndices[1] === 3 ? 'none' : 'block'}}\r\n                    onClick={() => {\r\n                      if (allowSelecting) {\r\n                        this.setSelectedBtnIndex(3);\r\n                        onOptionSelect(shuffledOptions[3])\r\n                      }\r\n                    }}\r\n                  >\r\n                    {\"D: \" + decodeURIComponent(shuffledOptions[3])}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </div>\r\n        ) : (\r\n          <div className=\"question-loading\">\r\n            <CircularProgress className=\"circularProgress\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionBoard;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport People from '@material-ui/icons/PeopleOutlined';\r\nimport Call from '@material-ui/icons/Call';\r\n\r\nimport \"./LifeLines.scss\";\r\n\r\nclass LifeLines extends Component {\r\n  render() {\r\n    const {\r\n      enableLifeLines,\r\n      hasAudiencePoll,\r\n      audiencePollHandler,\r\n      hasPhoneAFriend,\r\n      phoneAFriendHandler,\r\n      hasFiftyFifty,\r\n      fiftyFiftyHandler\r\n    } = this.props;\r\n    return (\r\n      <Grid container>\r\n        <Grid item xs={4} className=\"life-line-container\">\r\n          <Button\r\n            className=\"hovicon effect-1 sub-a\"\r\n            onClick={audiencePollHandler}\r\n            disabled={!hasAudiencePoll || !enableLifeLines}\r\n          >\r\n            <Paper className=\"life-line\">\r\n              <People />\r\n            </Paper>\r\n          </Button>\r\n          <p className=\"life-line-description\">Audience Poll</p>\r\n        </Grid>\r\n        <Grid item xs={4} className=\"life-line-container\">\r\n          <Button\r\n            className=\"hovicon effect-1 sub-a\"\r\n            onClick={phoneAFriendHandler}\r\n            disabled={!hasPhoneAFriend || !enableLifeLines}\r\n          >\r\n            <Paper className=\"life-line\">\r\n              <Call />\r\n            </Paper>\r\n          </Button>\r\n          <p className=\"life-line-description\">Phone a Friend</p>\r\n        </Grid>\r\n        <Grid item xs={4} className=\"life-line-container\">\r\n          <Button\r\n            className=\"hovicon effect-1 sub-a\"\r\n            onClick={fiftyFiftyHandler}\r\n            disabled={!hasFiftyFifty || !enableLifeLines}\r\n          >\r\n            <Paper className=\"life-line\">\r\n              <h4 style={{ margin: 0 }}>50/50</h4>\r\n            </Paper>\r\n          </Button>\r\n          <p className=\"life-line-description\">Fifty-Fifty</p>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LifeLines;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport LifeLines from \"./LifeLines\";\r\n\r\nimport \"./ScoreBoard.scss\";\r\n\r\nclass ScoreBoard extends Component {\r\n  render() {\r\n    const {\r\n      container,\r\n      mobileOpen,\r\n      handleDrawerToggle,\r\n      curScoreIndex,\r\n      scoreAmounts,\r\n      enableLifeLines,\r\n      hasAudiencePoll,\r\n      handleAudiencePoll,\r\n      hasPhoneAFriend,\r\n      handlePhoneAFriend,\r\n      hasFiftyFifty,\r\n      handleFiftyFifty\r\n    } = this.props;\r\n\r\n    return (\r\n      <nav className=\"drawer\" aria-label=\"mailbox folders\">\r\n        <Hidden mdUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor=\"right\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            ModalProps={{\r\n              keepMounted: true // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <div className=\"drawer-content\">\r\n              <div className=\"life-lines-wrapper\">\r\n                <LifeLines\r\n                  enableLifeLines={enableLifeLines}\r\n                  hasAudiencePoll={hasAudiencePoll}\r\n                  audiencePollHandler={handleAudiencePoll}\r\n                  hasPhoneAFriend={hasPhoneAFriend}\r\n                  phoneAFriendHandler={handlePhoneAFriend}\r\n                  hasFiftyFifty={hasFiftyFifty}\r\n                  fiftyFiftyHandler={handleFiftyFifty}\r\n                />\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n                {scoreAmounts.map((scoreAmount, index) => {\r\n                  const questionNumber = scoreAmounts.length - index;\r\n                  if (questionNumber - 1 === curScoreIndex) {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          className=\"score-amount\"\r\n                          color=\"inherit\"\r\n                        >\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  } else if (questionNumber - 1 < curScoreIndex) {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button variant=\"outlined\" className=\"score-amount\">\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          className=\"score-amount\"\r\n                          disabled\r\n                        >\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  }\r\n                })}\r\n              </List>\r\n            </div>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown implementation=\"css\">\r\n          <Drawer variant=\"permanent\" anchor=\"right\" open>\r\n            <div className=\"drawer-content\">\r\n              <div className=\"life-lines-wrapper\">\r\n                <LifeLines\r\n                  enableLifeLines={enableLifeLines}\r\n                  hasAudiencePoll={hasAudiencePoll}\r\n                  audiencePollHandler={handleAudiencePoll}\r\n                  hasPhoneAFriend={hasPhoneAFriend}\r\n                  phoneAFriendHandler={handlePhoneAFriend}\r\n                  hasFiftyFifty={hasFiftyFifty}\r\n                  fiftyFiftyHandler={handleFiftyFifty}\r\n                />\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n                {scoreAmounts.map((scoreAmount, index) => {\r\n                  const questionNumber = scoreAmounts.length - index;\r\n                  if (questionNumber - 1 === curScoreIndex) {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          className=\"score-amount\"\r\n                          color=\"inherit\"\r\n                        >\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  } else if (questionNumber - 1 < curScoreIndex) {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button variant=\"outlined\" className=\"score-amount\">\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          className=\"score-amount\"\r\n                          disabled\r\n                        >\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  }\r\n                })}\r\n              </List>\r\n            </div>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScoreBoard;\r\n","import React, { Component } from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport \"./AudiencePoll.scss\";\r\n\r\nclass AudiencePoll extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      valueOfA: 0,\r\n      valueOfB: 0,\r\n      valueOfC: 0,\r\n      valueOfD: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { correctAnswerIndex } = this.props;\r\n\r\n    const correctAnswerValue = this.getRandomInt(50, 85);\r\n    const wrongOptionOneValue = this.getRandomInt(0, 100 - correctAnswerValue);\r\n    const wrongOptiontwoValue = this.getRandomInt(0, 100 - correctAnswerValue - wrongOptionOneValue);  \r\n    const wrongOptionThreeValue = 100 - correctAnswerValue - wrongOptionOneValue - wrongOptiontwoValue;\r\n    \r\n    switch (correctAnswerIndex) {\r\n      case 0:\r\n        this.setState({\r\n          valueOfA: correctAnswerValue,\r\n          valueOfB: wrongOptionOneValue,\r\n          valueOfC: wrongOptiontwoValue,\r\n          valueOfD: wrongOptionThreeValue\r\n        });\r\n        return;\r\n      case 1:\r\n        this.setState({\r\n          valueOfA: wrongOptionOneValue,\r\n          valueOfB: correctAnswerValue,\r\n          valueOfC: wrongOptiontwoValue,\r\n          valueOfD: wrongOptionThreeValue\r\n        });\r\n        return;\r\n      case 2:\r\n        this.setState({\r\n          valueOfA: wrongOptionOneValue,\r\n          valueOfB: wrongOptiontwoValue,\r\n          valueOfC: correctAnswerValue,\r\n          valueOfD: wrongOptionThreeValue\r\n        });\r\n        return;\r\n      case 3:\r\n        this.setState({\r\n          valueOfA: wrongOptionOneValue,\r\n          valueOfB: wrongOptiontwoValue,\r\n          valueOfC: wrongOptionThreeValue,\r\n          valueOfD: correctAnswerValue\r\n        });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  render() {\r\n    const { valueOfA, valueOfB, valueOfC, valueOfD } = this.state;\r\n    return (\r\n      <Grid container className=\"audience-poll\">\r\n        <Grid item xs={3}>\r\n          <p className=\"audience-option-value\">{`${valueOfA}%`}</p>\r\n          <div className=\"audience-option-bar-container\">\r\n            <div style={{height: `${100 - valueOfA}%`, background: \"#424242\"}}></div>\r\n          </div>\r\n          <p className=\"audience-option\">A</p>\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <p className=\"audience-option-value\">{`${valueOfB}%`}</p>\r\n          <div className=\"audience-option-bar-container\">\r\n            <div style={{height: `${100 - valueOfB}%`, background: \"#424242\"}}></div>\r\n          </div>\r\n          <p className=\"audience-option\">B</p>\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <p className=\"audience-option-value\">{`${valueOfC}%`}</p>\r\n          <div className=\"audience-option-bar-container\">\r\n            <div style={{height: `${100 - valueOfC}%`, background: \"#424242\"}}></div>\r\n          </div>\r\n          <p className=\"audience-option\">C</p>\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <p className=\"audience-option-value\">{`${valueOfD}%`}</p>\r\n          <div className=\"audience-option-bar-container\">\r\n            <div style={{height: `${100 - valueOfD}%`, background: \"#424242\"}}></div>\r\n          </div>\r\n          <p className=\"audience-option\">D</p>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AudiencePoll;\r\n","import React, { Component } from 'react';\r\n\r\nclass AudiencePoll extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      answer: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { options, correctAnswerIndex } = this.props;\r\n    const letter = String.fromCharCode(97 + correctAnswerIndex);\r\n    const answer = this.getAnswerText(letter, options[correctAnswerIndex]);\r\n    this.setState({ answer });\r\n  }\r\n\r\n  getAnswerText = (letter, answer) => {\r\n    const randomInt = this.getRandomInt(0, 3);\r\n    switch (randomInt) {\r\n      case 0:\r\n        return `Hey, this is a tough one. I am not 100% sure but if I had to guess I'd say (${letter}) \"${decodeURIComponent(answer)}\". Good luck!`;\r\n      case 1:\r\n        return `Hello, this is a tricky question. I am not familiar with this game but I am leaning towards (${letter}) \"${decodeURIComponent(answer)}\". Good luck!`;\r\n      case 2:\r\n        return `Hi, this is an easy one!. It has to be (${letter}) \"${decodeURIComponent(answer)}\". Good luck!`;\r\n      case 3:\r\n        return `Oh! I've played this game before but I can't seem to recall the answer. I think it is (${letter}) \"${decodeURIComponent(answer)}\" but I am not certain. Good luck!`;\r\n      default:\r\n        return \"Oh man! Your guess is as good as mine. I have no clue, sorry. Good luck!\";\r\n    }\r\n  }\r\n\r\n  getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  render() {\r\n    const { answer } = this.state;\r\n    return (\r\n      <p style={{margin: \"20px\"}}>{ answer }</p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AudiencePoll;\r\n","import React, { Component } from 'react';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AudiencePoll from './AudiencePoll';\r\nimport PhoneAFriend from './PhoneAFriend';\r\n\r\nclass LifeLineModal extends Component {\r\n  getContent = () => {\r\n    const { title, options, correctAnswerIndex } = this.props;\r\n    switch (title) {\r\n      case \"Audience Poll\":\r\n        return <AudiencePoll options={options} correctAnswerIndex={correctAnswerIndex} />\r\n      case \"Phone a Friend\":\r\n        return <PhoneAFriend options={options} correctAnswerIndex={correctAnswerIndex} />\r\n      case \"Fifty-Fifty\":\r\n        return <p>Removing two WRONG answers</p>\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, open, onClose } = this.props;\r\n    return (\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"modal-container\"\r\n        open={open}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <Paper className=\"modal-content\">\r\n            <h2 className=\"modal-title\">{title}</h2>\r\n            {this.getContent()}\r\n            <Button variant=\"contained\" className=\"modal-btn\" onClick={() => onClose()}>\r\n              Close\r\n            </Button>\r\n          </Paper>\r\n        </Fade>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LifeLineModal;\r\n","import React, { Component } from 'react';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './WinModal.scss';\r\n\r\nclass WinModal extends Component {\r\n  render() {\r\n    const { title, open, backToMenu, resetGame, score, correctAnswer } = this.props;\r\n    return (\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"modal-container\"\r\n        open={open}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <Paper className=\"modal-content\">\r\n            <h2 className=\"modal-title\">{title}</h2>\r\n            {title !== \"Congratulations!\" ? (\r\n              <p className=\"modal-text\">\r\n                {`The correct answer is \"${decodeURIComponent(correctAnswer)}\"`}\r\n              </p>\r\n            ) : (\r\n              <p className=\"modal-text\">\r\n                <span role=\"img\" aria-label=\"party popper\">🎉</span> You are a millionaire! <span role=\"img\" aria-label=\"party popper\">🎉</span>\r\n              </p>\r\n            )}\r\n            <p className=\"modal-score-title\">Your score:</p>\r\n            <h1 className=\"modal-score\">{score}</h1>\r\n\r\n            <Grid container className=\"modal-options-container\">\r\n              <Grid item xs={6}>\r\n                <Button variant=\"contained\" className=\"modal-btn\" onClick={() => backToMenu()}>\r\n                  Back to Menu\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Button variant=\"contained\" className=\"modal-btn\" onClick={() => resetGame()}>\r\n                  Play Again\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Fade>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WinModal;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nimport PlayMenu from \"./components/PlayMenu\";\r\nimport CustomAppBar from \"./components/CustomAppBar\";\r\nimport QuestionBoard from \"./components/QuestionBoard\";\r\nimport ScoreBoard from \"./components/ScoreBoard\";\r\nimport LifeLines from \"./components/LifeLines\";\r\nimport LifeLineModal from \"./components/LifeLineModal\";\r\nimport WinModal from \"./components/WinModal\";\r\n\r\nimport \"./App.scss\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\"\r\n  }\r\n});\r\n\r\nconst scoreAmounts = [\r\n  100,\r\n  200,\r\n  300,\r\n  500,\r\n  1000, // 4\r\n  2000,\r\n  4000,\r\n  8000,\r\n  16000,\r\n  32000,\r\n  64000, // 10\r\n  125000,\r\n  250000,\r\n  500000,\r\n  1000000 // 14\r\n];\r\n\r\nconst reversedScoreAmounts = scoreAmounts.reverse();\r\n\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n  minimumFractionDigits: 0\r\n});\r\n\r\nconst formattedScoreAmounts = reversedScoreAmounts.map(scoreAmount => formatter.format(scoreAmount));\r\n\r\nconst shuffle = a => {\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n};\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: true,\r\n      questionsData: [],\r\n      curQuestion: null,\r\n      shuffledOptions: [],\r\n      correctAnswerIndex: null,\r\n      curQuestionIndex: 0,\r\n      mobileOpen: false,\r\n      currentScore: \"$0\",\r\n      nextScore: formattedScoreAmounts[formattedScoreAmounts.length - 1],\r\n      hasGameEnded: false,\r\n      modalTitle: \"Game Over\",\r\n      hasAudiencePoll: true,\r\n      hasPhoneAFriend: true,\r\n      hasFiftyFifty: true,\r\n      twoWrongIndices: [-1, -1],\r\n      hasSelectedLifeLine: false,\r\n      selectedLifeLine: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setupGame();\r\n  }\r\n\r\n  setupGame = async () => {\r\n    const promises = [\r\n      axios.get(\r\n        \"https://opentdb.com/api.php?amount=5&category=15&difficulty=easy&type=multiple&encode=url3986\"\r\n      ),\r\n      axios.get(\r\n        \"https://opentdb.com/api.php?amount=5&category=15&difficulty=medium&type=multiple&encode=url3986\"\r\n      ),\r\n      axios.get(\r\n        \"https://opentdb.com/api.php?amount=5&category=15&difficulty=hard&type=multiple&encode=url3986\"\r\n      )\r\n    ];\r\n\r\n    await Promise.all(promises)\r\n      .then(allResponses => {\r\n        let questionsData = [];\r\n        allResponses.forEach(res => {\r\n          questionsData = questionsData.concat(res.data.results);\r\n        });\r\n\r\n        const curQuestion = questionsData[0];\r\n        const shuffledOptions = shuffle(\r\n          [curQuestion.correct_answer].concat(curQuestion.incorrect_answers)\r\n        );\r\n        const correctAnswerIndex = shuffledOptions.findIndex(option => option === curQuestion.correct_answer);\r\n        \r\n        this.setState({\r\n          questionsData,\r\n          curQuestion,\r\n          shuffledOptions,\r\n          correctAnswerIndex,\r\n          curQuestionIndex: 0,\r\n          currentScore: formatter.format(0),\r\n          nextScore: formattedScoreAmounts[formattedScoreAmounts.length - 1],\r\n          hasGameEnded: false,\r\n          modalTitle: \"Game Over\",\r\n          hasAudiencePoll: true,\r\n          hasPhoneAFriend: true,\r\n          hasFiftyFifty: true,\r\n          twoWrongIndices: [-1, -1],\r\n          hasSelectedLifeLine: false,\r\n          selectedLifeLine: \"\"\r\n        });\r\n      })\r\n      .catch(e => console.log(e));\r\n  };\r\n\r\n  letsPlay = () => {\r\n    this.setState({\r\n      hasGameEnded: false,\r\n      showMenu: false\r\n    });\r\n  }\r\n\r\n  backToMenu = () => {\r\n    this.setState({\r\n      hasGameEnded: false,\r\n      showMenu: true\r\n    });\r\n    this.setupGame();\r\n  }\r\n\r\n  getCurrentQuestion = () => {\r\n    const { questionsData, curQuestionIndex } = this.state;\r\n    return questionsData[curQuestionIndex];\r\n  };\r\n\r\n  verifyAnswer = async option => {\r\n    const { questionsData, curQuestionIndex } = this.state;\r\n    const curQuestion = questionsData[curQuestionIndex];\r\n    await delay(100);\r\n    this.questionBoard.handleButtonSelect();\r\n    this.questionBoard.playPauseTimer();\r\n\r\n    await delay(1500);\r\n    this.questionBoard.handleCorrectSelectedOptionStyle();\r\n    await delay(1500);\r\n\r\n    if (curQuestion.correct_answer === option) {\r\n      if (curQuestionIndex !== questionsData.length - 1) {\r\n        const newCurQuestionIndex = curQuestionIndex + 1;\r\n        const newCurQuestion = questionsData[newCurQuestionIndex];\r\n        const shuffledOptions = shuffle(\r\n          [newCurQuestion.correct_answer].concat(newCurQuestion.incorrect_answers)\r\n        );\r\n        const correctAnswerIndex = shuffledOptions.findIndex(option => option === newCurQuestion.correct_answer);\r\n        \r\n        this.setState({\r\n          curQuestion: newCurQuestion,\r\n          shuffledOptions,\r\n          correctAnswerIndex,\r\n          curQuestionIndex: newCurQuestionIndex,\r\n          nextScore: formattedScoreAmounts[formattedScoreAmounts.length - newCurQuestionIndex - 1],\r\n          currentScore: formattedScoreAmounts[formattedScoreAmounts.length - curQuestionIndex - 1],\r\n          twoWrongIndices: [-1, -1]\r\n        });\r\n\r\n        this.questionBoard.resetTimer();\r\n        this.questionBoard.resetButtonStyles();\r\n      } else {\r\n        this.setState({\r\n          hasGameEnded: true,\r\n          modalTitle: \"Congratulations!\",\r\n          nextScore: \"——\",\r\n          currentScore: formattedScoreAmounts[0],\r\n          twoWrongIndices: [-1, -1]\r\n        })\r\n      }\r\n    } else {\r\n      this.setState({\r\n        hasGameEnded: true,\r\n        modalTitle: \"Incorrect\"\r\n      })\r\n    }\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    const { mobileOpen } = this.state;\r\n    this.setState({ mobileOpen: !mobileOpen });\r\n  };\r\n\r\n  handleAudiencePoll = () => {\r\n    console.log(\"Clicked audience poll\")\r\n    this.questionBoard.playPauseTimer();\r\n    this.setState({\r\n      hasSelectedLifeLine: true,\r\n      selectedLifeLine: \"Audience Poll\"\r\n    });\r\n  }\r\n\r\n  handlePhoneAFriend = () => {\r\n    this.questionBoard.playPauseTimer();\r\n    this.setState({\r\n      hasSelectedLifeLine: true,\r\n      selectedLifeLine: \"Phone a Friend\"\r\n    });\r\n  }\r\n\r\n  handleFiftyFifty = () => {\r\n    this.questionBoard.playPauseTimer();\r\n    this.setState({\r\n      hasSelectedLifeLine: true,\r\n      selectedLifeLine: \"Fifty-Fifty\",\r\n    });\r\n  }\r\n\r\n  onLifeLineModalClose = () => {\r\n    const { selectedLifeLine } = this.state;\r\n    this.questionBoard.playPauseTimer();\r\n\r\n    switch (selectedLifeLine) {\r\n      case \"Audience Poll\":\r\n        this.setState({\r\n          hasAudiencePoll: false,\r\n          hasSelectedLifeLine: false,\r\n          selectedLifeLine: \"\"\r\n        });\r\n        return;\r\n      case \"Phone a Friend\":\r\n        this.setState({\r\n          hasPhoneAFriend: false,\r\n          hasSelectedLifeLine: false,\r\n          selectedLifeLine: \"\"\r\n        });\r\n        return;\r\n      case \"Fifty-Fifty\":\r\n        this.removeTwoIncorrectOptions();\r\n        this.setState({\r\n          hasFiftyFifty: false,\r\n          hasSelectedLifeLine: false,\r\n          selectedLifeLine: \"\"\r\n\r\n        });\r\n        return;\r\n      default:\r\n        this.setState({\r\n          hasSelectedLifeLine: false,\r\n          selectedLifeLine: \"\"\r\n        });\r\n        return;\r\n    }\r\n  }\r\n\r\n  removeTwoIncorrectOptions = () => {\r\n    const { correctAnswerIndex } = this.state;\r\n\r\n    let wrongAnsIndexOne = null;\r\n    while (wrongAnsIndexOne === null || wrongAnsIndexOne === correctAnswerIndex) {\r\n      wrongAnsIndexOne = this.getRandomInt(0, 3);\r\n    }\r\n\r\n    let wrongAnsIndexTwo = null;\r\n    while (wrongAnsIndexTwo === null || wrongAnsIndexTwo === correctAnswerIndex || wrongAnsIndexTwo === wrongAnsIndexOne) {\r\n      wrongAnsIndexTwo = this.getRandomInt(0, 3);\r\n    }\r\n\r\n    this.setState({\r\n      twoWrongIndices: [wrongAnsIndexOne, wrongAnsIndexTwo]\r\n    });\r\n  }\r\n\r\n  getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  handleTimerExpire = async () => {\r\n    this.questionBoard.handleCorrectSelectedOptionStyle();\r\n    await delay(2000);\r\n    this.setState({\r\n      hasGameEnded: true,\r\n      modalTitle: \"Ran out of time!\"\r\n    });\r\n  }\r\n\r\n  resetGame = () => {\r\n    this.setupGame();\r\n    this.questionBoard.resetTimer();\r\n    this.questionBoard.resetButtonStyles();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showMenu,\r\n      curQuestion,\r\n      shuffledOptions,\r\n      correctAnswerIndex,\r\n      mobileOpen,\r\n      curQuestionIndex,\r\n      currentScore,\r\n      nextScore,\r\n      hasGameEnded,\r\n      modalTitle,\r\n      hasAudiencePoll,\r\n      hasPhoneAFriend,\r\n      hasFiftyFifty,\r\n      twoWrongIndices,\r\n      hasSelectedLifeLine,\r\n      selectedLifeLine\r\n    } = this.state;\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"root\">\r\n          <CssBaseline />\r\n          <CustomAppBar\r\n            title=\"Who Wants to Be a Millionaire - Video Game Edition\"\r\n            handleDrawerToggle={this.handleDrawerToggle}\r\n          />\r\n          <main className=\"content\">\r\n            {showMenu ? (\r\n              <div>\r\n                <PlayMenu letsPlay={this.letsPlay} />\r\n                <span className=\"author\">Made by Vineet Koppalkar</span>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <QuestionBoard\r\n                  onRef={ref => (this.questionBoard = ref)}\r\n                  question={curQuestion}\r\n                  shuffledOptions={shuffledOptions}\r\n                  correctAnswerIndex={correctAnswerIndex}\r\n                  twoWrongIndices={twoWrongIndices}\r\n                  onOptionSelect={this.verifyAnswer}\r\n                  currentScore={currentScore}\r\n                  nextScore={nextScore}\r\n                  setCurrentScore={this.setCurrentScore}\r\n                  handleTimerExpire={this.handleTimerExpire}\r\n                />\r\n                <span className=\"author\">Made by Vineet Koppalkar</span>\r\n                <div className=\"life-lines-container\">\r\n                  <LifeLines\r\n                    enableLifeLines={curQuestion != null}\r\n                    hasAudiencePoll={hasAudiencePoll}\r\n                    audiencePollHandler={this.handleAudiencePoll}\r\n                    hasPhoneAFriend={hasPhoneAFriend}\r\n                    phoneAFriendHandler={this.handlePhoneAFriend}\r\n                    hasFiftyFifty={hasFiftyFifty}\r\n                    fiftyFiftyHandler={this.handleFiftyFifty}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </main>\r\n          <ScoreBoard\r\n            container={this.props.container}\r\n            mobileOpen={mobileOpen}\r\n            handleDrawerToggle={this.handleDrawerToggle}\r\n            curScoreIndex={curQuestionIndex}\r\n            scoreAmounts={formattedScoreAmounts}\r\n            enableLifeLines={showMenu ? false : curQuestion == null  ? false : true}\r\n            hasAudiencePoll={hasAudiencePoll}\r\n            handleAudiencePoll={this.handleAudiencePoll}\r\n            hasPhoneAFriend={hasPhoneAFriend}\r\n            handlePhoneAFriend={this.handlePhoneAFriend}\r\n            hasFiftyFifty={hasFiftyFifty}\r\n            handleFiftyFifty={this.handleFiftyFifty}\r\n          />\r\n\r\n          {hasSelectedLifeLine ? (\r\n            <LifeLineModal\r\n              title={selectedLifeLine}\r\n              open={hasSelectedLifeLine}\r\n              onClose={this.onLifeLineModalClose}\r\n              options={shuffledOptions}\r\n              correctAnswerIndex={correctAnswerIndex}\r\n            />\r\n          ) : null}\r\n\r\n          {hasGameEnded ? (\r\n            <WinModal\r\n              title={modalTitle}\r\n              open={hasGameEnded}\r\n              backToMenu={this.backToMenu}\r\n              resetGame={this.resetGame}\r\n              score={currentScore}\r\n              correctAnswer={shuffledOptions[correctAnswerIndex]}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.a8954dc5.png\";"],"sourceRoot":""}