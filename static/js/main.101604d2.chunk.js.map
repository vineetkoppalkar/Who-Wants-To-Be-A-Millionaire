{"version":3,"sources":["components/PlayMenu.js","components/CustomAppBar.js","components/Timer.js","components/ScoreTracker.js","components/QuestionBoard.js","components/LifeLines.js","components/ScoreBoard.js","components/AudiencePoll.js","components/PhoneAFriend.js","components/LifeLineModal.js","components/WinModal.js","App.js","serviceWorker.js","index.js","assets/images/logo.png"],"names":["PlayMenu","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","letsPlay","this","props","React","createElement","Paper","className","alt","src","logo","Button","variant","onClick","Component","CustomAppBar","_this$props","title","handleDrawerToggle","AppBar","position","id","Toolbar","IconButton","color","aria-label","edge","MenuIcon","Timer","_this","call","reset","setState","hasHandledTimerExpire","timerValue","progressValue","pause","playPause","state","_this2","onRef","setInterval","_this2$state","handleTimerExpire","_this$state","CircularProgress","ScoreTracker","currentScore","nextScore","Grid","container","spacing","item","xs","style","float","QuestionBoard","setSelectedBtnIndex","index","allowSelecting","selectedBtnIndex","handleButtonSelect","firstOptionClass","secondOptionClass","thirdOptionClass","fourthOptionClass","handleCorrectSelectedOptionStyle","correctAnswerIndex","resetButtonStyles","resetTimer","timer","playPauseTimer","question","onOptionSelect","shuffledOptions","twoWrongIndices","ref","margin","decodeURIComponent","concat","display","LifeLines","enableLifeLines","hasAudiencePoll","audiencePollHandler","hasPhoneAFriend","phoneAFriendHandler","hasFiftyFifty","fiftyFiftyHandler","disabled","People","Call","ScoreBoard","mobileOpen","curScoreIndex","scoreAmounts","handleAudiencePoll","handlePhoneAFriend","handleFiftyFifty","Hidden","mdUp","implementation","Drawer","anchor","open","onClose","ModalProps","keepMounted","Divider","List","map","scoreAmount","questionNumber","length","ListItem","smDown","AudiencePoll","getRandomInt","min","max","Math","ceil","floor","random","valueOfA","valueOfB","valueOfC","valueOfD","correctAnswerValue","wrongOptionOneValue","wrongOptiontwoValue","wrongOptionThreeValue","height","background","getAnswerText","letter","answer","options","String","fromCharCode","LifeLineModal","_len","args","Array","_key","getContent","PhoneAFriend","_this$props2","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","WinModal","backToMenu","resetGame","score","correctAnswer","role","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","theme","createTheme","palette","reversedScoreAmounts","formatter","Intl","NumberFormat","currency","minimumFractionDigits","formattedScoreAmounts","format","shuffle","a","j","_ref","delay","ms","res","setTimeout","App","setupGame","_asyncToGenerator","_callee","promises","_context","axios","get","all","allResponses","questionsData","data","results","curQuestion","correct_answer","incorrect_answers","findIndex","option","curQuestionIndex","hasGameEnded","modalTitle","hasSelectedLifeLine","selectedLifeLine","e","console","log","showMenu","getCurrentQuestion","verifyAnswer","_ref3","_callee2","_this$state2","newCurQuestionIndex","newCurQuestion","_context2","questionBoard","_x","onLifeLineModalClose","removeTwoIncorrectOptions","wrongAnsIndexOne","wrongAnsIndexTwo","_callee3","_context3","_this$state3","MuiThemeProvider","CssBaseline","setCurrentScore","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module"],"mappings":"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","file":"static/js/main.101604d2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport logo from \"../assets/images/logo.png\";\r\n\r\nimport \"./PlayMenu.scss\";\r\n\r\nclass PlayMenu extends Component {\r\n  render() {\r\n    const { letsPlay } = this.props;\r\n    return (\r\n      <Paper className=\"play-menu\">\r\n        <img alt=\"Who Wants to Be a Millionaire\" src={logo} className=\"logo\" />\r\n        <h1 className=\"game-title\">Who Wants to Be a Millionaire</h1>\r\n        <h2 className=\"game-subtitle\">Video Game Edition</h2>\r\n        <Button \r\n          variant=\"contained\"\r\n          onClick={letsPlay}\r\n        >\r\n          Let's Play!\r\n        </Button>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayMenu;\r\n","import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport \"./CustomAppBar.scss\";\r\n\r\nclass CustomAppBar extends Component {\r\n  render() {\r\n    const { title, handleDrawerToggle } = this.props;\r\n    return (\r\n      <AppBar position=\"fixed\" id=\"appBar\">\r\n        <Toolbar>\r\n          <h3 className=\"title\">{title}</h3>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={() => handleDrawerToggle()}\r\n            id=\"menuButton\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomAppBar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport \"./Timer.scss\";\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasHandledTimerExpire: false,\r\n      timerValue: 60,\r\n      progressValue: 100,\r\n      pause: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n\r\n    setInterval(() => {\r\n      const { timerValue, progressValue, pause } = this.state;\r\n      if (!pause) {\r\n        if (timerValue > 0) {\r\n          this.setState({\r\n            timerValue: timerValue - 1,\r\n            progressValue: progressValue - 1.67\r\n          });\r\n        } else {\r\n          const { hasHandledTimerExpire } = this.state;\r\n          const { handleTimerExpire } = this.props;\r\n          if (!hasHandledTimerExpire) {\r\n            handleTimerExpire();\r\n            this.setState({hasHandledTimerExpire: true})\r\n          }\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      hasHandledTimerExpire: false,\r\n      timerValue: 60,\r\n      progressValue: 100,\r\n      pause: false\r\n    });\r\n  };\r\n\r\n  playPause = () => {\r\n    const { pause } = this.state;\r\n    this.setState({ pause: !pause });\r\n  }\r\n\r\n  render() {\r\n    const { timerValue, progressValue } = this.state;\r\n    return (\r\n      <div className=\"timer-container\">\r\n        <Paper id=\"timer\">\r\n          <CircularProgress\r\n            className=\"circularProgress\"\r\n            variant=\"static\"\r\n            value={progressValue}\r\n          />\r\n          <h2 id=\"timer-value\">{timerValue}</h2>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./ScoreTracker.scss\";\r\n\r\nclass ScoreTracker extends Component {\r\n  render() {\r\n    const { currentScore, nextScore } = this.props;\r\n    return (\r\n      <Grid container spacing={10}>\r\n        <Grid item xs={6}>\r\n          <span className=\"score-title\">Current score:</span>\r\n          <Paper className=\"score-badge\">{currentScore}</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <span className=\"score-title\" style={{ float: \"right\" }}>\r\n            Playing for:\r\n          </span>\r\n          <br />\r\n          <Paper className=\"score-badge\" style={{ float: \"right\" }}>\r\n            {nextScore}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScoreTracker;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport Timer from \"./Timer\";\r\nimport ScoreTracker from \"./ScoreTracker\";\r\n\r\nimport \"./QuestionBoard.scss\";\r\n\r\nclass QuestionBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allowSelecting: true,\r\n      selectedBtnIndex: null,\r\n      firstOptionClass: '',\r\n      secondOptionClass: '',\r\n      thirdOptionClass: '',\r\n      fourthOptionClass: ''\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  setSelectedBtnIndex = (index) => {\r\n    this.setState({\r\n      allowSelecting: false,\r\n      selectedBtnIndex: index\r\n    });\r\n  }\r\n\r\n  handleButtonSelect = () => {\r\n    const { selectedBtnIndex } = this.state;\r\n    switch (selectedBtnIndex) {\r\n      case 0:\r\n        this.setState({\r\n          firstOptionClass: \"selected-option\"\r\n        });\r\n        return;\r\n      case 1:\r\n        this.setState({\r\n          secondOptionClass: \"selected-option\"\r\n        });\r\n        return;\r\n      case 2:\r\n        this.setState({\r\n          thirdOptionClass: \"selected-option\"\r\n        });\r\n        return;\r\n      case 3:\r\n        this.setState({\r\n          fourthOptionClass: \"selected-option\"\r\n        });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  handleCorrectSelectedOptionStyle = () => {\r\n    const { correctAnswerIndex } = this.props;\r\n\r\n    switch (correctAnswerIndex) {\r\n      case 0:\r\n        this.setState({\r\n          allowSelecting: false,\r\n          firstOptionClass: \"correct-answer\"\r\n        });\r\n        return;\r\n      case 1:\r\n        this.setState({\r\n          allowSelecting: false,\r\n          secondOptionClass: \"correct-answer\"\r\n        });\r\n        return;\r\n      case 2:\r\n        this.setState({\r\n          allowSelecting: false,\r\n          thirdOptionClass: \"correct-answer\"\r\n        });\r\n        return;\r\n      case 3:\r\n        this.setState({\r\n          allowSelecting: false,\r\n          fourthOptionClass: \"correct-answer\"\r\n        });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  resetButtonStyles = () => {\r\n    this.setState({\r\n      allowSelecting: true,\r\n      selectedBtnIndex: null,\r\n      firstOptionClass: '',\r\n      secondOptionClass: '',\r\n      thirdOptionClass: '',\r\n      fourthOptionClass: ''\r\n    })\r\n  }\r\n\r\n  resetTimer = () => {\r\n    this.timer.reset();\r\n  }\r\n\r\n  playPauseTimer = () => {\r\n    this.timer.playPause();\r\n  }\r\n\r\n  render() {\r\n    const { allowSelecting, firstOptionClass, secondOptionClass, thirdOptionClass, fourthOptionClass } = this.state;\r\n    const { question, onOptionSelect, currentScore, nextScore, handleTimerExpire, shuffledOptions, twoWrongIndices } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <ScoreTracker currentScore={currentScore} nextScore={nextScore} />\r\n        {question ? (\r\n          <div>\r\n            <Paper className=\"question-board\">\r\n              <Timer\r\n                onRef={ref => (this.timer = ref)}\r\n                handleTimerExpire={handleTimerExpire}\r\n              />\r\n              <h2 style={{ margin: \"15px 0 25px\" }}>\r\n                {decodeURIComponent(question.question)}\r\n              </h2>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={`question-option ${firstOptionClass}`}\r\n                    style={{display: twoWrongIndices[0] === 0 || twoWrongIndices[1] === 0 ? 'none' : 'block'}}\r\n                    onClick={() => {\r\n                      if (allowSelecting) {\r\n                        this.setSelectedBtnIndex(0);\r\n                        onOptionSelect(shuffledOptions[0]);\r\n                      }\r\n                    }}\r\n                  >\r\n                    {\"A: \" + decodeURIComponent(shuffledOptions[0])}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={`question-option ${secondOptionClass}`}\r\n                    style={{display: twoWrongIndices[0] === 1 || twoWrongIndices[1] === 1 ? 'none' : 'block'}}\r\n                    onClick={() => {\r\n                      if (allowSelecting) {\r\n                        this.setSelectedBtnIndex(1);\r\n                        onOptionSelect(shuffledOptions[1])\r\n                      }\r\n                    }}\r\n                  >\r\n                    {\"B: \" + decodeURIComponent(shuffledOptions[1])}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={`question-option ${thirdOptionClass}`}\r\n                    style={{display: twoWrongIndices[0] === 2 || twoWrongIndices[1] === 2 ? 'none' : 'block'}}\r\n                    onClick={() => {\r\n                      if (allowSelecting) {\r\n                        this.setSelectedBtnIndex(2);\r\n                        onOptionSelect(shuffledOptions[2])\r\n                      }\r\n                    }}\r\n                  >\r\n                    {\"C: \" + decodeURIComponent(shuffledOptions[2])}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={`question-option ${fourthOptionClass}`}\r\n                    style={{display: twoWrongIndices[0] === 3 || twoWrongIndices[1] === 3 ? 'none' : 'block'}}\r\n                    onClick={() => {\r\n                      if (allowSelecting) {\r\n                        this.setSelectedBtnIndex(3);\r\n                        onOptionSelect(shuffledOptions[3])\r\n                      }\r\n                    }}\r\n                  >\r\n                    {\"D: \" + decodeURIComponent(shuffledOptions[3])}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </div>\r\n        ) : (\r\n          <div className=\"question-loading\">\r\n            <CircularProgress className=\"circularProgress\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionBoard;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport People from '@material-ui/icons/PeopleOutlined';\r\nimport Call from '@material-ui/icons/Call';\r\n\r\nimport \"./LifeLines.scss\";\r\n\r\nclass LifeLines extends Component {\r\n  render() {\r\n    const {\r\n      enableLifeLines,\r\n      hasAudiencePoll,\r\n      audiencePollHandler,\r\n      hasPhoneAFriend,\r\n      phoneAFriendHandler,\r\n      hasFiftyFifty,\r\n      fiftyFiftyHandler\r\n    } = this.props;\r\n    return (\r\n      <Grid container>\r\n        <Grid item xs={4} className=\"life-line-container\">\r\n          <Button\r\n            className=\"hovicon effect-1 sub-a\"\r\n            onClick={audiencePollHandler}\r\n            disabled={!hasAudiencePoll || !enableLifeLines}\r\n          >\r\n            <Paper className=\"life-line\">\r\n              <People />\r\n            </Paper>\r\n          </Button>\r\n          <p className=\"life-line-description\">Audience Poll</p>\r\n        </Grid>\r\n        <Grid item xs={4} className=\"life-line-container\">\r\n          <Button\r\n            className=\"hovicon effect-1 sub-a\"\r\n            onClick={phoneAFriendHandler}\r\n            disabled={!hasPhoneAFriend || !enableLifeLines}\r\n          >\r\n            <Paper className=\"life-line\">\r\n              <Call />\r\n            </Paper>\r\n          </Button>\r\n          <p className=\"life-line-description\">Phone a Friend</p>\r\n        </Grid>\r\n        <Grid item xs={4} className=\"life-line-container\">\r\n          <Button\r\n            className=\"hovicon effect-1 sub-a\"\r\n            onClick={fiftyFiftyHandler}\r\n            disabled={!hasFiftyFifty || !enableLifeLines}\r\n          >\r\n            <Paper className=\"life-line\">\r\n              <h4 style={{ margin: 0 }}>50/50</h4>\r\n            </Paper>\r\n          </Button>\r\n          <p className=\"life-line-description\">Fifty-Fifty</p>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LifeLines;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport LifeLines from \"./LifeLines\";\r\n\r\nimport \"./ScoreBoard.scss\";\r\n\r\nclass ScoreBoard extends Component {\r\n  render() {\r\n    const {\r\n      container,\r\n      mobileOpen,\r\n      handleDrawerToggle,\r\n      curScoreIndex,\r\n      scoreAmounts,\r\n      enableLifeLines,\r\n      hasAudiencePoll,\r\n      handleAudiencePoll,\r\n      hasPhoneAFriend,\r\n      handlePhoneAFriend,\r\n      hasFiftyFifty,\r\n      handleFiftyFifty\r\n    } = this.props;\r\n\r\n    return (\r\n      <nav className=\"drawer\" aria-label=\"mailbox folders\">\r\n        <Hidden mdUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor=\"right\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            ModalProps={{\r\n              keepMounted: true // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <div className=\"drawer-content\">\r\n              <div className=\"life-lines-wrapper\">\r\n                <LifeLines\r\n                  enableLifeLines={enableLifeLines}\r\n                  hasAudiencePoll={hasAudiencePoll}\r\n                  audiencePollHandler={handleAudiencePoll}\r\n                  hasPhoneAFriend={hasPhoneAFriend}\r\n                  phoneAFriendHandler={handlePhoneAFriend}\r\n                  hasFiftyFifty={hasFiftyFifty}\r\n                  fiftyFiftyHandler={handleFiftyFifty}\r\n                />\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n                {scoreAmounts.map((scoreAmount, index) => {\r\n                  const questionNumber = scoreAmounts.length - index;\r\n                  if (questionNumber - 1 === curScoreIndex) {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          className=\"score-amount\"\r\n                          color=\"inherit\"\r\n                        >\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  } else if (questionNumber - 1 < curScoreIndex) {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button variant=\"outlined\" className=\"score-amount\">\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          className=\"score-amount\"\r\n                          disabled\r\n                        >\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  }\r\n                })}\r\n              </List>\r\n            </div>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown implementation=\"css\">\r\n          <Drawer variant=\"permanent\" anchor=\"right\" open>\r\n            <div className=\"drawer-content\">\r\n              <div className=\"life-lines-wrapper\">\r\n                <LifeLines\r\n                  enableLifeLines={enableLifeLines}\r\n                  hasAudiencePoll={hasAudiencePoll}\r\n                  audiencePollHandler={handleAudiencePoll}\r\n                  hasPhoneAFriend={hasPhoneAFriend}\r\n                  phoneAFriendHandler={handlePhoneAFriend}\r\n                  hasFiftyFifty={hasFiftyFifty}\r\n                  fiftyFiftyHandler={handleFiftyFifty}\r\n                />\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n                {scoreAmounts.map((scoreAmount, index) => {\r\n                  const questionNumber = scoreAmounts.length - index;\r\n                  if (questionNumber - 1 === curScoreIndex) {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          className=\"score-amount\"\r\n                          color=\"inherit\"\r\n                        >\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  } else if (questionNumber - 1 < curScoreIndex) {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button variant=\"outlined\" className=\"score-amount\">\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <ListItem key={scoreAmount}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          className=\"score-amount\"\r\n                          disabled\r\n                        >\r\n                          {`${questionNumber}) ${scoreAmount}`}\r\n                        </Button>\r\n                      </ListItem>\r\n                    );\r\n                  }\r\n                })}\r\n              </List>\r\n            </div>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScoreBoard;\r\n","import React, { Component } from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport \"./AudiencePoll.scss\";\r\n\r\nclass AudiencePoll extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      valueOfA: 0,\r\n      valueOfB: 0,\r\n      valueOfC: 0,\r\n      valueOfD: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { correctAnswerIndex } = this.props;\r\n\r\n    const correctAnswerValue = this.getRandomInt(50, 85);\r\n    const wrongOptionOneValue = this.getRandomInt(0, 100 - correctAnswerValue);\r\n    const wrongOptiontwoValue = this.getRandomInt(0, 100 - correctAnswerValue - wrongOptionOneValue);  \r\n    const wrongOptionThreeValue = 100 - correctAnswerValue - wrongOptionOneValue - wrongOptiontwoValue;\r\n    \r\n    switch (correctAnswerIndex) {\r\n      case 0:\r\n        this.setState({\r\n          valueOfA: correctAnswerValue,\r\n          valueOfB: wrongOptionOneValue,\r\n          valueOfC: wrongOptiontwoValue,\r\n          valueOfD: wrongOptionThreeValue\r\n        });\r\n        return;\r\n      case 1:\r\n        this.setState({\r\n          valueOfA: wrongOptionOneValue,\r\n          valueOfB: correctAnswerValue,\r\n          valueOfC: wrongOptiontwoValue,\r\n          valueOfD: wrongOptionThreeValue\r\n        });\r\n        return;\r\n      case 2:\r\n        this.setState({\r\n          valueOfA: wrongOptionOneValue,\r\n          valueOfB: wrongOptiontwoValue,\r\n          valueOfC: correctAnswerValue,\r\n          valueOfD: wrongOptionThreeValue\r\n        });\r\n        return;\r\n      case 3:\r\n        this.setState({\r\n          valueOfA: wrongOptionOneValue,\r\n          valueOfB: wrongOptiontwoValue,\r\n          valueOfC: wrongOptionThreeValue,\r\n          valueOfD: correctAnswerValue\r\n        });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  render() {\r\n    const { valueOfA, valueOfB, valueOfC, valueOfD } = this.state;\r\n    return (\r\n      <Grid container className=\"audience-poll\">\r\n        <Grid item xs={3}>\r\n          <p className=\"audience-option-value\">{`${valueOfA}%`}</p>\r\n          <div className=\"audience-option-bar-container\">\r\n            <div style={{height: `${100 - valueOfA}%`, background: \"#424242\"}}></div>\r\n          </div>\r\n          <p className=\"audience-option\">A</p>\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <p className=\"audience-option-value\">{`${valueOfB}%`}</p>\r\n          <div className=\"audience-option-bar-container\">\r\n            <div style={{height: `${100 - valueOfB}%`, background: \"#424242\"}}></div>\r\n          </div>\r\n          <p className=\"audience-option\">B</p>\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <p className=\"audience-option-value\">{`${valueOfC}%`}</p>\r\n          <div className=\"audience-option-bar-container\">\r\n            <div style={{height: `${100 - valueOfC}%`, background: \"#424242\"}}></div>\r\n          </div>\r\n          <p className=\"audience-option\">C</p>\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <p className=\"audience-option-value\">{`${valueOfD}%`}</p>\r\n          <div className=\"audience-option-bar-container\">\r\n            <div style={{height: `${100 - valueOfD}%`, background: \"#424242\"}}></div>\r\n          </div>\r\n          <p className=\"audience-option\">D</p>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AudiencePoll;\r\n","import React, { Component } from 'react';\r\n\r\nclass AudiencePoll extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      answer: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { options, correctAnswerIndex } = this.props;\r\n    const letter = String.fromCharCode(97 + correctAnswerIndex);\r\n    const answer = this.getAnswerText(letter, options[correctAnswerIndex]);\r\n    this.setState({ answer });\r\n  }\r\n\r\n  getAnswerText = (letter, answer) => {\r\n    const randomInt = this.getRandomInt(0, 3);\r\n    switch (randomInt) {\r\n      case 0:\r\n        return `Hey, this is a tough one. I am not 100% sure but if I had to guess I'd say (${letter}) \"${decodeURIComponent(answer)}\". Good luck!`;\r\n      case 1:\r\n        return `Hello, this is a tricky question. I am not familiar with this game but I am leaning towards (${letter}) \"${decodeURIComponent(answer)}\". Good luck!`;\r\n      case 2:\r\n        return `Hi, this is an easy one!. It has to be (${letter}) \"${decodeURIComponent(answer)}\". Good luck!`;\r\n      case 3:\r\n        return `Oh! I've played this game before but I can't seem to recall the answer. I think it is (${letter}) \"${decodeURIComponent(answer)}\" but I am not certain. Good luck!`;\r\n      default:\r\n        return \"Oh man! Your guess is as good as mine. I have no clue, sorry. Good luck!\";\r\n    }\r\n  }\r\n\r\n  getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  render() {\r\n    const { answer } = this.state;\r\n    return (\r\n      <p style={{margin: \"20px\"}}>{ answer }</p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AudiencePoll;\r\n","import React, { Component } from 'react';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AudiencePoll from './AudiencePoll';\r\nimport PhoneAFriend from './PhoneAFriend';\r\n\r\nclass LifeLineModal extends Component {\r\n  getContent = () => {\r\n    const { title, options, correctAnswerIndex } = this.props;\r\n    switch (title) {\r\n      case \"Audience Poll\":\r\n        return <AudiencePoll options={options} correctAnswerIndex={correctAnswerIndex} />\r\n      case \"Phone a Friend\":\r\n        return <PhoneAFriend options={options} correctAnswerIndex={correctAnswerIndex} />\r\n      case \"Fifty-Fifty\":\r\n        return <p>Removing two WRONG answers</p>\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, open, onClose } = this.props;\r\n    return (\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"modal-container\"\r\n        open={open}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <Paper className=\"modal-content\">\r\n            <h2 className=\"modal-title\">{title}</h2>\r\n            {this.getContent()}\r\n            <Button variant=\"contained\" className=\"modal-btn\" onClick={() => onClose()}>\r\n              Close\r\n            </Button>\r\n          </Paper>\r\n        </Fade>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LifeLineModal;\r\n","import React, { Component } from 'react';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './WinModal.scss';\r\n\r\nclass WinModal extends Component {\r\n  render() {\r\n    const { title, open, backToMenu, resetGame, score, correctAnswer } = this.props;\r\n    return (\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"modal-container\"\r\n        open={open}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <Paper className=\"modal-content\">\r\n            <h2 className=\"modal-title\">{title}</h2>\r\n            {title !== \"Congratulations!\" ? (\r\n              <p className=\"modal-text\">\r\n                {`The correct answer is \"${decodeURIComponent(correctAnswer)}\"`}\r\n              </p>\r\n            ) : (\r\n              <p className=\"modal-text\">\r\n                <span role=\"img\" aria-label=\"party popper\">🎉</span> You are a millionaire! <span role=\"img\" aria-label=\"party popper\">🎉</span>\r\n              </p>\r\n            )}\r\n            <p className=\"modal-score-title\">Your score:</p>\r\n            <h1 className=\"modal-score\">{score}</h1>\r\n\r\n            <Grid container className=\"modal-options-container\">\r\n              <Grid item xs={6}>\r\n                <Button variant=\"contained\" className=\"modal-btn\" onClick={() => backToMenu()}>\r\n                  Back to Menu\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Button variant=\"contained\" className=\"modal-btn\" onClick={() => resetGame()}>\r\n                  Play Again\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Fade>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WinModal;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { MuiThemeProvider, createTheme } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nimport PlayMenu from \"./components/PlayMenu\";\r\nimport CustomAppBar from \"./components/CustomAppBar\";\r\nimport QuestionBoard from \"./components/QuestionBoard\";\r\nimport ScoreBoard from \"./components/ScoreBoard\";\r\nimport LifeLines from \"./components/LifeLines\";\r\nimport LifeLineModal from \"./components/LifeLineModal\";\r\nimport WinModal from \"./components/WinModal\";\r\n\r\nimport \"./App.scss\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: \"dark\"\r\n  }\r\n});\r\n\r\nconst scoreAmounts = [\r\n  100,\r\n  200,\r\n  300,\r\n  500,\r\n  1000, // 4\r\n  2000,\r\n  4000,\r\n  8000,\r\n  16000,\r\n  32000,\r\n  64000, // 10\r\n  125000,\r\n  250000,\r\n  500000,\r\n  1000000 // 14\r\n];\r\n\r\nconst reversedScoreAmounts = scoreAmounts.reverse();\r\n\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n  minimumFractionDigits: 0\r\n});\r\n\r\nconst formattedScoreAmounts = reversedScoreAmounts.map(scoreAmount => formatter.format(scoreAmount));\r\n\r\nconst shuffle = a => {\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n};\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: true,\r\n      questionsData: [],\r\n      curQuestion: null,\r\n      shuffledOptions: [],\r\n      correctAnswerIndex: null,\r\n      curQuestionIndex: 0,\r\n      mobileOpen: false,\r\n      currentScore: \"$0\",\r\n      nextScore: formattedScoreAmounts[formattedScoreAmounts.length - 1],\r\n      hasGameEnded: false,\r\n      modalTitle: \"Game Over\",\r\n      hasAudiencePoll: true,\r\n      hasPhoneAFriend: true,\r\n      hasFiftyFifty: true,\r\n      twoWrongIndices: [-1, -1],\r\n      hasSelectedLifeLine: false,\r\n      selectedLifeLine: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setupGame();\r\n  }\r\n\r\n  setupGame = async () => {\r\n    const promises = [\r\n      axios.get(\r\n        \"https://opentdb.com/api.php?amount=5&category=15&difficulty=easy&type=multiple&encode=url3986\"\r\n      ),\r\n      axios.get(\r\n        \"https://opentdb.com/api.php?amount=5&category=15&difficulty=medium&type=multiple&encode=url3986\"\r\n      ),\r\n      axios.get(\r\n        \"https://opentdb.com/api.php?amount=5&category=15&difficulty=hard&type=multiple&encode=url3986\"\r\n      )\r\n    ];\r\n\r\n    await Promise.all(promises)\r\n      .then(allResponses => {\r\n        let questionsData = [];\r\n        allResponses.forEach(res => {\r\n          questionsData = questionsData.concat(res.data.results);\r\n        });\r\n\r\n        const curQuestion = questionsData[0];\r\n        const shuffledOptions = shuffle(\r\n          [curQuestion.correct_answer].concat(curQuestion.incorrect_answers)\r\n        );\r\n        const correctAnswerIndex = shuffledOptions.findIndex(option => option === curQuestion.correct_answer);\r\n\r\n        this.setState({\r\n          questionsData,\r\n          curQuestion,\r\n          shuffledOptions,\r\n          correctAnswerIndex,\r\n          curQuestionIndex: 0,\r\n          currentScore: formatter.format(0),\r\n          nextScore: formattedScoreAmounts[formattedScoreAmounts.length - 1],\r\n          hasGameEnded: false,\r\n          modalTitle: \"Game Over\",\r\n          hasAudiencePoll: true,\r\n          hasPhoneAFriend: true,\r\n          hasFiftyFifty: true,\r\n          twoWrongIndices: [-1, -1],\r\n          hasSelectedLifeLine: false,\r\n          selectedLifeLine: \"\"\r\n        });\r\n      })\r\n      .catch(e => console.log(e));\r\n  };\r\n\r\n  letsPlay = () => {\r\n    this.setState({\r\n      hasGameEnded: false,\r\n      showMenu: false\r\n    });\r\n  }\r\n\r\n  backToMenu = () => {\r\n    this.setState({\r\n      hasGameEnded: false,\r\n      showMenu: true\r\n    });\r\n    this.setupGame();\r\n  }\r\n\r\n  getCurrentQuestion = () => {\r\n    const { questionsData, curQuestionIndex } = this.state;\r\n    return questionsData[curQuestionIndex];\r\n  };\r\n\r\n  verifyAnswer = async option => {\r\n    const { questionsData, curQuestionIndex } = this.state;\r\n    const curQuestion = questionsData[curQuestionIndex];\r\n    await delay(100);\r\n    this.questionBoard.handleButtonSelect();\r\n    this.questionBoard.playPauseTimer();\r\n\r\n    await delay(1500);\r\n    this.questionBoard.handleCorrectSelectedOptionStyle();\r\n    await delay(1500);\r\n\r\n    if (curQuestion.correct_answer === option) {\r\n      if (curQuestionIndex !== questionsData.length - 1) {\r\n        const newCurQuestionIndex = curQuestionIndex + 1;\r\n        const newCurQuestion = questionsData[newCurQuestionIndex];\r\n        const shuffledOptions = shuffle(\r\n          [newCurQuestion.correct_answer].concat(newCurQuestion.incorrect_answers)\r\n        );\r\n        const correctAnswerIndex = shuffledOptions.findIndex(option => option === newCurQuestion.correct_answer);\r\n\r\n        this.setState({\r\n          curQuestion: newCurQuestion,\r\n          shuffledOptions,\r\n          correctAnswerIndex,\r\n          curQuestionIndex: newCurQuestionIndex,\r\n          nextScore: formattedScoreAmounts[formattedScoreAmounts.length - newCurQuestionIndex - 1],\r\n          currentScore: formattedScoreAmounts[formattedScoreAmounts.length - curQuestionIndex - 1],\r\n          twoWrongIndices: [-1, -1]\r\n        });\r\n\r\n        this.questionBoard.resetTimer();\r\n        this.questionBoard.resetButtonStyles();\r\n      } else {\r\n        this.setState({\r\n          hasGameEnded: true,\r\n          modalTitle: \"Congratulations!\",\r\n          nextScore: \"——\",\r\n          currentScore: formattedScoreAmounts[0],\r\n          twoWrongIndices: [-1, -1]\r\n        })\r\n      }\r\n    } else {\r\n      this.setState({\r\n        hasGameEnded: true,\r\n        modalTitle: \"Incorrect\"\r\n      })\r\n    }\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    const { mobileOpen } = this.state;\r\n    this.setState({ mobileOpen: !mobileOpen });\r\n  };\r\n\r\n  handleAudiencePoll = () => {\r\n    console.log(\"Clicked audience poll\")\r\n    this.questionBoard.playPauseTimer();\r\n    this.setState({\r\n      hasSelectedLifeLine: true,\r\n      selectedLifeLine: \"Audience Poll\"\r\n    });\r\n  }\r\n\r\n  handlePhoneAFriend = () => {\r\n    this.questionBoard.playPauseTimer();\r\n    this.setState({\r\n      hasSelectedLifeLine: true,\r\n      selectedLifeLine: \"Phone a Friend\"\r\n    });\r\n  }\r\n\r\n  handleFiftyFifty = () => {\r\n    this.questionBoard.playPauseTimer();\r\n    this.setState({\r\n      hasSelectedLifeLine: true,\r\n      selectedLifeLine: \"Fifty-Fifty\",\r\n    });\r\n  }\r\n\r\n  onLifeLineModalClose = () => {\r\n    const { selectedLifeLine } = this.state;\r\n    this.questionBoard.playPauseTimer();\r\n\r\n    switch (selectedLifeLine) {\r\n      case \"Audience Poll\":\r\n        this.setState({\r\n          hasAudiencePoll: false,\r\n          hasSelectedLifeLine: false,\r\n          selectedLifeLine: \"\"\r\n        });\r\n        return;\r\n      case \"Phone a Friend\":\r\n        this.setState({\r\n          hasPhoneAFriend: false,\r\n          hasSelectedLifeLine: false,\r\n          selectedLifeLine: \"\"\r\n        });\r\n        return;\r\n      case \"Fifty-Fifty\":\r\n        this.removeTwoIncorrectOptions();\r\n        this.setState({\r\n          hasFiftyFifty: false,\r\n          hasSelectedLifeLine: false,\r\n          selectedLifeLine: \"\"\r\n\r\n        });\r\n        return;\r\n      default:\r\n        this.setState({\r\n          hasSelectedLifeLine: false,\r\n          selectedLifeLine: \"\"\r\n        });\r\n        return;\r\n    }\r\n  }\r\n\r\n  removeTwoIncorrectOptions = () => {\r\n    const { correctAnswerIndex } = this.state;\r\n\r\n    let wrongAnsIndexOne = null;\r\n    while (wrongAnsIndexOne === null || wrongAnsIndexOne === correctAnswerIndex) {\r\n      wrongAnsIndexOne = this.getRandomInt(0, 3);\r\n    }\r\n\r\n    let wrongAnsIndexTwo = null;\r\n    while (wrongAnsIndexTwo === null || wrongAnsIndexTwo === correctAnswerIndex || wrongAnsIndexTwo === wrongAnsIndexOne) {\r\n      wrongAnsIndexTwo = this.getRandomInt(0, 3);\r\n    }\r\n\r\n    this.setState({\r\n      twoWrongIndices: [wrongAnsIndexOne, wrongAnsIndexTwo]\r\n    });\r\n  }\r\n\r\n  getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  handleTimerExpire = async () => {\r\n    this.questionBoard.handleCorrectSelectedOptionStyle();\r\n    await delay(2000);\r\n    this.setState({\r\n      hasGameEnded: true,\r\n      modalTitle: \"Ran out of time!\"\r\n    });\r\n  }\r\n\r\n  resetGame = () => {\r\n    this.setupGame();\r\n    this.questionBoard.resetTimer();\r\n    this.questionBoard.resetButtonStyles();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showMenu,\r\n      curQuestion,\r\n      shuffledOptions,\r\n      correctAnswerIndex,\r\n      mobileOpen,\r\n      curQuestionIndex,\r\n      currentScore,\r\n      nextScore,\r\n      hasGameEnded,\r\n      modalTitle,\r\n      hasAudiencePoll,\r\n      hasPhoneAFriend,\r\n      hasFiftyFifty,\r\n      twoWrongIndices,\r\n      hasSelectedLifeLine,\r\n      selectedLifeLine\r\n    } = this.state;\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"root\">\r\n          <CssBaseline />\r\n          <CustomAppBar\r\n            title=\"Who Wants to Be a Millionaire - Video Game Edition\"\r\n            handleDrawerToggle={this.handleDrawerToggle}\r\n          />\r\n          <main className=\"content\">\r\n            {showMenu ? (\r\n              <div>\r\n                <PlayMenu letsPlay={this.letsPlay} />\r\n                <span className=\"author\">Made by Vineet Koppalkar</span>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <QuestionBoard\r\n                  onRef={ref => (this.questionBoard = ref)}\r\n                  question={curQuestion}\r\n                  shuffledOptions={shuffledOptions}\r\n                  correctAnswerIndex={correctAnswerIndex}\r\n                  twoWrongIndices={twoWrongIndices}\r\n                  onOptionSelect={this.verifyAnswer}\r\n                  currentScore={currentScore}\r\n                  nextScore={nextScore}\r\n                  setCurrentScore={this.setCurrentScore}\r\n                  handleTimerExpire={this.handleTimerExpire}\r\n                />\r\n                <span className=\"author\">Made by Vineet Koppalkar</span>\r\n                <div className=\"life-lines-container\">\r\n                  <LifeLines\r\n                    enableLifeLines={curQuestion != null}\r\n                    hasAudiencePoll={hasAudiencePoll}\r\n                    audiencePollHandler={this.handleAudiencePoll}\r\n                    hasPhoneAFriend={hasPhoneAFriend}\r\n                    phoneAFriendHandler={this.handlePhoneAFriend}\r\n                    hasFiftyFifty={hasFiftyFifty}\r\n                    fiftyFiftyHandler={this.handleFiftyFifty}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </main>\r\n          <ScoreBoard\r\n            container={this.props.container}\r\n            mobileOpen={mobileOpen}\r\n            handleDrawerToggle={this.handleDrawerToggle}\r\n            curScoreIndex={curQuestionIndex}\r\n            scoreAmounts={formattedScoreAmounts}\r\n            enableLifeLines={showMenu ? false : curQuestion == null  ? false : true}\r\n            hasAudiencePoll={hasAudiencePoll}\r\n            handleAudiencePoll={this.handleAudiencePoll}\r\n            hasPhoneAFriend={hasPhoneAFriend}\r\n            handlePhoneAFriend={this.handlePhoneAFriend}\r\n            hasFiftyFifty={hasFiftyFifty}\r\n            handleFiftyFifty={this.handleFiftyFifty}\r\n          />\r\n\r\n          {hasSelectedLifeLine ? (\r\n            <LifeLineModal\r\n              title={selectedLifeLine}\r\n              open={hasSelectedLifeLine}\r\n              onClose={this.onLifeLineModalClose}\r\n              options={shuffledOptions}\r\n              correctAnswerIndex={correctAnswerIndex}\r\n            />\r\n          ) : null}\r\n\r\n          {hasGameEnded ? (\r\n            <WinModal\r\n              title={modalTitle}\r\n              open={hasGameEnded}\r\n              backToMenu={this.backToMenu}\r\n              resetGame={this.resetGame}\r\n              score={currentScore}\r\n              correctAnswer={shuffledOptions[correctAnswerIndex]}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.a8954dc5.png\";"],"sourceRoot":""}